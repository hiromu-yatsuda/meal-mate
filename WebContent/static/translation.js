// translation.js
document.addEventListener('DOMContentLoaded', () => {
    const outputText1 = document.getElementById('outputText1');
    const outputText2 = document.getElementById('outputText2');
    const uploadMessageEl = document.getElementById('uploadMessage');

    // Ë©≥Á¥∞„Å™Ë®ÄË™û„Ç≥„Éº„Éâ„Éû„ÉÉ„Éî„É≥„Ç∞„Çí‰ΩøÁî®„Åó„ÅüÈñ¢Êï∞
    function convertToAWSLang(langCode) {
        const mapping = {
            "ja-JP": "ja",
            "en-US": "en",
            "en-GB": "en",
            "es-ES": "es",
            "es-MX": "es",
            "fr-FR": "fr",
            "de-DE": "de",
            "zh-CN": "zh",
            "ko-KR": "ko",
            "it-IT": "it",
            "ru-RU": "ru",
            "pt-PT": "pt",
            "pt-BR": "pt",
            "ar-SA": "ar"
            // ÂøÖË¶Å„Å´Âøú„Åò„Å¶‰ªñ„ÅÆ„Éû„ÉÉ„Éî„É≥„Ç∞„ÇíËøΩÂä†
        };
        // „Éû„ÉÉ„Éî„É≥„Ç∞„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅÂçòÁ¥î„Å´ÊúÄÂàù„ÅÆÈÉ®ÂàÜ„ÇíËøî„Åô
        return mapping[langCode] || langCode.split('-')[0];
    }

    function getSourceSelectedLang(selectId) {
        const sel = document.getElementById(selectId);
        return sel.value;
    }

    function getTargetSelectedLang(selectId) {
        const sel = document.getElementById(selectId);
        return sel.value;
    }

    function sendTextToServer(text, source_lang, target_lang) {
        const awsSourceLang = convertToAWSLang(source_lang);
        const awsTargetLang = convertToAWSLang(target_lang);

        fetch(contextPath + '/uploadTest', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                text: text,
                source_lang: awsSourceLang,
                target_lang: awsTargetLang
            })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('„Çµ„Éº„Éê„Éº„Ç®„É©„Éº');
            }
            return response.text();
        })
        .then(result => {
            console.log('„ÉÜ„Ç≠„Çπ„ÉàÈÄÅ‰ø°ÊàêÂäü:', result);
            uploadMessageEl.style.color = 'green';
            uploadMessageEl.textContent = '„ÉÜ„Ç≠„Çπ„Éà„ÇíÈÄÅ‰ø°„Åó„Åæ„Åó„Åü: ' + result;
        })
        .catch(error => {
            console.error('„ÉÜ„Ç≠„Çπ„ÉàÈÄÅ‰ø°Â§±Êïó:', error);
            uploadMessageEl.style.color = 'red';
            uploadMessageEl.textContent = '„ÉÜ„Ç≠„Çπ„ÉàÈÄÅ‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ';
        });
    }

    // ‰∏äÊÆµ„ÅÆÈü≥Â£∞Ë™çË≠òË®≠ÂÆö
    let recognizing1 = false;
    let recognition1;
    const recordBtn1 = document.getElementById('recordBtn1');

    if ('webkitSpeechRecognition' in window) {
        recognition1 = new webkitSpeechRecognition();
    } else if ('SpeechRecognition' in window) {
        recognition1 = new SpeechRecognition();
    }

    if (recognition1) {
        recognition1.lang = getSourceSelectedLang('userLang1');
        recognition1.interimResults = false;

        recognition1.onresult = (event) => {
            const text = event.results[0][0].transcript;
            console.log('‰∏äÊÆµ„ÅÆË™çË≠òÁµêÊûú:', text);
            outputText1.textContent = text;
            sendTextToServer(text, getSourceSelectedLang('userLang1'), getTargetSelectedLang('userLang2'));
        };

        recognition1.onerror = (e) => {
            console.error('‰∏äÊÆµ„ÅÆË™çË≠ò„Ç®„É©„Éº', e);
            uploadMessageEl.style.color = 'red';
            uploadMessageEl.textContent = '‰∏äÊÆµ Èü≥Â£∞Ë™çË≠ò„Å´Â§±Êïó„Åó„Åæ„Åó„Åü';
        };

        recordBtn1.disabled = false;
        recordBtn1.textContent = 'üé§';

        recordBtn1.addEventListener('click', () => {
            if (!recognizing1) {
                // Èå≤Èü≥ÈñãÂßãÂâç„Å´ÈÅ∏Êäû„Åï„Çå„ÅüË®ÄË™û„ÇíÂèñÂæó„Åó„ÄÅË™çË≠ò„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Å´Ë®≠ÂÆö
                recognition1.lang = getSourceSelectedLang('userLang1');
                recognition1.start();
                recognizing1 = true;
                recordBtn1.textContent = 'STOP';
                uploadMessageEl.textContent = '';
            } else {
                recognition1.stop();
                recognizing1 = false;
                recordBtn1.textContent = 'üé§';
            }
        });

    } else {
        recordBtn1.disabled = true;
        recordBtn1.textContent = 'Êú™ÂØæÂøú';
    }

    // ‰∏ãÊÆµ„ÅÆÈü≥Â£∞Ë™çË≠òË®≠ÂÆö
    let recognizing2 = false;
    let recognition2;
    const recordBtn2 = document.getElementById('recordBtn2');

    if ('webkitSpeechRecognition' in window) {
        recognition2 = new webkitSpeechRecognition();
    } else if ('SpeechRecognition' in window) {
        recognition2 = new SpeechRecognition();
    }

    if (recognition2) {
        recognition2.lang = getSourceSelectedLang('userLang2');
        recognition2.interimResults = false;

        recognition2.onresult = (event) => {
            const text = event.results[0][0].transcript;
            console.log('‰∏ãÊÆµ„ÅÆË™çË≠òÁµêÊûú:', text);
            outputText2.textContent = text;
            sendTextToServer(text, getSourceSelectedLang('userLang2'), getTargetSelectedLang('userLang1'));
        };

        recognition2.onerror = (e) => {
            console.error('‰∏ãÊÆµ„ÅÆË™çË≠ò„Ç®„É©„Éº', e);
            uploadMessageEl.style.color = 'red';
            uploadMessageEl.textContent = '‰∏ãÊÆµ Èü≥Â£∞Ë™çË≠ò„Å´Â§±Êïó„Åó„Åæ„Åó„Åü';
        };

        recordBtn2.disabled = false;
        recordBtn2.textContent = 'üé§';

        recordBtn2.addEventListener('click', () => {
            if (!recognizing2) {
                recognition2.lang = getSourceSelectedLang('userLang2');
                recognition2.start();
                recognizing2 = true;
                recordBtn2.textContent = 'STOP';
                uploadMessageEl.textContent = '';
            } else {
                recognition2.stop();
                recognizing2 = false;
                recordBtn2.textContent = 'üé§';
            }
        });

    } else {
        recordBtn2.disabled = true;
        recordBtn2.textContent = 'Êú™ÂØæÂøú';
    }

    document.getElementById('sendFixedDataBtn').addEventListener('click', () => {
        const fixedText = "„Åì„Çì„Å∞„Çì„ÅØ";
        const fixedSourceLang = "ja";
        const fixedTargetLang = "en";
        sendTextToServer(fixedText, fixedSourceLang, fixedTargetLang);
    });

});
